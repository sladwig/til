print "START"

proc e () {
    error "Test error"
}

proc on.error (e) {
    print "on.error 0: $e"
}

scope "everything" {
    proc on.error (e) {
        print "on.error 1: $e"
    }

    proc nop () {
    scope "handling error directly inside the scope" {
        proc on.error (e) {
            print "on.error 2: $e"
        }

        print "First test"
        print "Calling procedure `e`..."
        e
    }
    print "Procedure `e` was called and the error was handled"
    }

    print "Second test"
    scope "handling error from ExecList" {
        proc on.error (e) {
            print "on.error 3: $e"
            return $e
        }
        # This should work this way:
        # An error pops inside the ExecList
        # on.error (2) is called, prints the error, return it
        # The returned error pops directly into the scope
        # on.error (2) is called again, prints the error, return it
        # The returned error pops outside the scope
        # on.error (1) is called and ignores the error.
        set x [e]
    }
}

print "END"
