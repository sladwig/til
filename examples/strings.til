print "START"

print "A string with a \$ (dollar sign) in it."
print "A string with a \" (double quote) in it."
print "A string with a \\ (backslash) in it."

set value 123
print "value:" $value
print "value is $value"
set s "\$value is $value"
print $s
assert ($s == "\$value is 123")
print "ok: $s"

proc test_undefined_variable () {
    proc on.error (e) {
        print "Error (as expected): $e"
    }

    print "Should not print a " "$totally_undefined_variable" " in the beginning of the string"
    print "Nor another $totally_undefined_variable anywhere in the string"
}

test_undefined_variable

# Extractions:
set s "123456789"
assert (<$s 0> == "1")
assert (<$s -1> == "9")

# Methods
assert ([length $s] == 9)
set pointed "1.2.3.4.5.6.7"
set parts [split $pointed "."]
set counter 1
print "parts: $parts"
range $parts | foreach part {
    print "part: $part"
    assert ($part == "$counter")
    incr $counter
}
assert (<$parts 0> == "1")
assert (<$parts 6> == "7")

set s [join "-" (1 2 3 4 5)]
print "\$s ($s) is a " [typeof $s]
assert ([join "-" (1 2 3 4 5)] == "1-2-3-4-5")

# 1-2-3-4-5
# 0123456789
set index [find "4" $s]
assert ($index == 6)
assert ([find "x" $s] == -1)

set special_chars_string "\b\n\r\t"

# Ranges:
set output ""
range $s | foreach x {
    set output "$output$x"
}
assert ($output == $s)

print "END"
